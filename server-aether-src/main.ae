(fun create-message [version return-code payload]
  (let message '')
  (set message (+ message 'INTP'))
  (set message (+ message (byte-16-to-str version)))
  (set message (+ message (byte-16-to-str return-code)))
  (set message (+ message (byte-32-to-str (len payload))))
  (set message (+ message payload))
  message)

(if (< (len (get-args)) 3)
  (println 'ERROR: no routes were provided')
  (exit 1))

(let file-path (nth (get-args) 2))
(let bytecode (read-file file-path))
(if (unit? bytecode)
  (print 'ERROR: File ')
  (print file-path)
  (println ' was not found')
  (exit 1))

(let server (create-server 8080))
(if (unit? server)
  (println 'ERROR: failed to create server')
  (exit 1))

(while true
  (let client (accept-connection server 8080))
  (if (unit? client)
    (println 'ERROR: failed to accept new connection')
    (exit 1))

  (let request (receive client))
  (let response (create-message 1 0 bytecode))
  (send client response)
  (close-connection client))
